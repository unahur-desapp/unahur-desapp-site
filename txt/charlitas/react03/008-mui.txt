(intro)
Uso de package que da soporte acerca de elementos gráficos y styling.

Hinchadas: package sí vs package no. Creo que es más popular "package sí". 

Las que conozco: Bootstrap y MUI.
Dato: el estado italiano está switcheando.
Muy populares (entre las dos se llevan casi la mitad de React).

Resumamos lo que nos da MUI.
1. Componentes más bonitos, en el ejemplo los botones y el input field.
2. Una librería de íconos fácil de usar.
3. Una alternativa para la definición de flexboxes, que evita el uso de un archivo .CSS. En concreto, MUI provee componentes React que se renderizan como un div que ya tiene seteados los atributos CSS de flexbox.
4. Además de esto, más variantes y herramientas para el manejo del CSS.
5. En particular, herramientas específicas que apuntan a implementar páginas que sean responsive.


(Mui01)
Empezamos con el elemento (3)
- Stack
- sx
- reemplazo div con Box para aplicar sx en lugar de style.
(acá garpa ponerlos uno al lado del otro, Mui01-flex vs ApiCalls02-delete-add)

Nota del 2024s2: lo puse al lado de State06-use-callback-use-ref, notar también la diferencia de que se toman las frases con una llamada API. Ver network. Esto es repaso, lo vimos en la primera charla.
También puse el phrases-custom-styles.js en el medio. Creo que garpa.

Qué me gusta: que no tengo que andar mirando el CSS para entender la estructura.

... seguimos con el debate sobre si usar clases CSS o no ...

Hasta ahora seguimos de refactor.

Miremos qué onda cuando achicamos el ancho y ahora ...


(Mui02)
... lo mismo.

Ahora en pantalla grande se ve igual, pero se ajusta a medida que voy achicando.
O sea, aplicamos (5).
Veamos cuáles son las herramientas.
- idea de breakpoint (se puede ir a buscar la docu de MUI).
- sx muuuy cómodo.
  - márgenes del recuadro.
  - px de la barra de botones. 
- media queries, definición de isVeryNarrowViewpoint y también en title.


(Mui03)
Metemos los botones - https://mui.com/components/buttons/ - aplicamos (1)
- distintas variantes / tamaños
- ícono atrás - https://mui.com/material-ui/material-icons/#main-content - aplicamos (2)
  (hay que instalarse un package adicional - @mui/icons-material)

Y también un poco de CSS - aplicamos (4) - theme - https://mui.com/material-ui/customization/theming/
- typography para definir cómo se ve el texto de los botones
- palette para definir un "color" nuevo (es el color de fondo de los botones)

De paso: factorización - componente ColorButtons ... y miren el efecto de ponerlos en flexboxes con diferente direction.


(Mui04)
Input - https://mui.com/material-ui/react-text-field/
- controlled
- error + touched
- fullWidth
- button disabled sobre el mismo mensaje de error + touched

... esto es un mundo, posta que estamos rascando la superficie y no más que eso ...

Refactoring 
- saco el flexbox exterior al componente principal para colgar AddPhrase de ahí.
- "subo" renderedPhrases y fetchPhrases

Chiche
- por qué le paso parámetro a doAddPhrase => eficiencia